package com.shepherdmoney.interviewproject.controller;
import com.shepherdmoney.interviewproject.vo.request.CreateUserPayload;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import com.shepherdmoney.interviewproject.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import com.shepherdmoney.interviewproject.model.User;

@RestController
public class UserController {
    // TODO: wire in the user repository (~ 1 line)
    @Autowired UserRepository userRepository;
    @PutMapping("/user")
    public ResponseEntity<Integer> createUser(@RequestBody CreateUserPayload payload) {
        // TODO: Create an user entity with information given in the payload, store it in the database
        //       and return the id of the user in 200 OK response

        // Return a bad_req if either given name or email is empty or entirely blank
        if(payload.getName().isBlank() || payload.getEmail().isBlank()){
            System.out.println("Either name or email input was blank");
            return new ResponseEntity<>(
                HttpStatus.BAD_REQUEST
           );
        }

        // Store user entity in database
        // id is autogenerated
        User user = new User();
        user.setName(payload.getName());
        user.setEmail(payload.getEmail());
        userRepository.save(user);
        return new ResponseEntity<>(
            user.getId(), HttpStatus.OK
        );
    }

    @DeleteMapping("/user")
    public ResponseEntity<String> deleteUser(@RequestParam int userId) {
        // TODO: Return 200 OK if a user with the given ID exists, and the deletion is successful
        //       Return 400 Bad Request if a user with the ID does not exist
        //       The response body could be anything you consider appropriate

        // check if user with ID does not exist and return bad_req
        
        if(userRepository.findById(userId).isEmpty()){
            System.out.println("User does not exist");
            return new ResponseEntity<>(
                "User ID does not exist!", HttpStatus.BAD_REQUEST
            );
        }
        // otherwise delete the user and return 200 OK
        userRepository.deleteById(userId);
        return new ResponseEntity<>(
            "Deletion was successful!", HttpStatus.OK
        );
    }
}
